Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Log = undefined;

var _windowOrGlobal = require('./window-or-global');

var _windowOrGlobal2 = babelHelpers.interopRequireDefault(_windowOrGlobal);

var bows = void 0;
(function (base) {
  window = base || window;
  if (!window.localStorage) window.localStorage = {};
})(_windowOrGlobal2.default);

var levels = ['warn', 'info', 'error', 'debug'];

var Log = exports.Log = function () {
  function Log(namespace) {
    var _this = this;

    babelHelpers.classCallCheck(this, Log);

    this._namespace = namespace || 'firestack';
    this.loggers = {};

    levels.forEach(function (level) {
      return _this[level] = function () {
        return _this._log(level).apply(undefined, arguments);
      };
    });
  }

  babelHelpers.createClass(Log, [{
    key: '_log',
    value: function _log(level) {
      if (!this.loggers[level]) {
        (function () {
          var bows = require('bows');
          bows.config({ padLength: 20 });
          this.loggers[level] = bows(this._namespace, '[' + level + ']');
        }).bind(this)();
      }
      return this.loggers[level];
    }
  }], [{
    key: 'enable',
    value: function enable(booleanOrStringDebug) {
      window.localStorage.debug = typeof booleanOrStringDebug === 'string' ? booleanOrStringDebug === '*' ? true : booleanOrStringDebug : booleanOrStringDebug instanceof RegExp ? booleanOrStringDebug.toString() : booleanOrStringDebug;

      window.localStorage.debugColors = !!window.localStorage.debug;
    }
  }]);
  return Log;
}();

exports.default = Log;