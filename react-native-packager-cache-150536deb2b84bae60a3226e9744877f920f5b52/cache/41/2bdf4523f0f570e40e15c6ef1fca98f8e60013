Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.getUserAvatar = getUserAvatar;

var _effects = require('redux-saga/effects');

var _ramda = require('ramda');

var _GithubRedux = require('../Redux/GithubRedux');

var _GithubRedux2 = babelHelpers.interopRequireDefault(_GithubRedux);

var _marked = [getUserAvatar].map(regeneratorRuntime.mark);

function getUserAvatar(api, action) {
  var username, response, firstUser, avatar;
  return regeneratorRuntime.wrap(function getUserAvatar$(_context) {
    while (1) {
      switch (_context.prev = _context.next) {
        case 0:
          username = action.username;
          _context.next = 3;
          return (0, _effects.call)(api.getUser, username);

        case 3:
          response = _context.sent;

          if (!response.ok) {
            _context.next = 11;
            break;
          }

          firstUser = (0, _ramda.path)(['data', 'items'], response)[0];
          avatar = firstUser.avatar_url;
          _context.next = 9;
          return (0, _effects.put)(_GithubRedux2.default.userSuccess(avatar));

        case 9:
          _context.next = 13;
          break;

        case 11:
          _context.next = 13;
          return (0, _effects.put)(_GithubRedux2.default.userFailure());

        case 13:
        case 'end':
          return _context.stop();
      }
    }
  }, _marked[0], this);
}