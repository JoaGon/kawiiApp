Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.reducer = exports.cancelSearch = exports.performSearch = exports.INITIAL_STATE = exports.TemperatureTypes = undefined;

var _createReducer;

var _reduxsauce = require('reduxsauce');

var _seamlessImmutable = require('seamless-immutable');

var _seamlessImmutable2 = babelHelpers.interopRequireDefault(_seamlessImmutable);

var _ramda = require('ramda');

var _ramdasauce = require('ramdasauce');

var LIST_DATA = ['sausage', 'blubber', 'pencil', 'cloud', 'moon', 'water', 'computer', 'school', 'network', 'hammer', 'walking', 'violently', 'mediocre', 'literature', 'chair', 'two', 'window', 'cords', 'musical', 'zebra', 'xylophone', 'penguin', 'home', 'dog', 'final', 'ink', 'teacher', 'fun', 'website', 'banana', 'uncle', 'softly', 'mega', 'ten', 'awesome', 'attatch', 'blue', 'internet', 'bottle', 'tight', 'zone', 'tomato', 'prison', 'hydro', 'cleaning', 'telivision', 'send', 'frog', 'cup', 'book', 'zooming', 'falling', 'evily', 'gamer', 'lid', 'juice', 'moniter', 'captain', 'bonding', 'loudly', 'thudding', 'guitar', 'shaving', 'hair', 'soccer', 'water', 'racket', 'table', 'late', 'media', 'desktop', 'flipper', 'club', 'flying', 'smooth', 'monster', 'purple', 'guardian', 'bold', 'hyperlink', 'presentation', 'world', 'national', 'comment', 'element', 'magic', 'lion', 'sand', 'crust', 'toast', 'jam', 'hunter', 'forest', 'foraging', 'silently', 'tawesomated', 'joshing', 'pong', 'RANDOM', 'WORD'];

var _createActions = (0, _reduxsauce.createActions)({
  search: ['searchTerm'],
  cancelSearch: null
}),
    Types = _createActions.Types,
    Creators = _createActions.Creators;

var TemperatureTypes = exports.TemperatureTypes = Types;
exports.default = Creators;
var INITIAL_STATE = exports.INITIAL_STATE = (0, _seamlessImmutable2.default)({
  searchTerm: '',
  searching: false,
  results: LIST_DATA
});

var performSearch = exports.performSearch = function performSearch(state, _ref) {
  var searchTerm = _ref.searchTerm;

  var results = (0, _ramda.filter)((0, _ramdasauce.startsWith)(searchTerm), LIST_DATA);
  return state.merge({ searching: true, searchTerm: searchTerm, results: results });
};

var cancelSearch = exports.cancelSearch = function cancelSearch(state) {
  return INITIAL_STATE;
};

var reducer = exports.reducer = (0, _reduxsauce.createReducer)(INITIAL_STATE, (_createReducer = {}, babelHelpers.defineProperty(_createReducer, Types.SEARCH, performSearch), babelHelpers.defineProperty(_createReducer, Types.CANCEL_SEARCH, cancelSearch), _createReducer));