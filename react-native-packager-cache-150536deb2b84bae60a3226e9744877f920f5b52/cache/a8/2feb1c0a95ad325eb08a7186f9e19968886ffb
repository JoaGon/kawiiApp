Object.defineProperty(exports, "__esModule", {
  value: true
});
var _jsxFileName = '/home/savk/ReactNativeWorkSpace/Kawii/App/Containers/App.js';

require('../Config');

var _DebugConfig = require('../Config/DebugConfig');

var _DebugConfig2 = babelHelpers.interopRequireDefault(_DebugConfig);

var _react = require('react');

var _react2 = babelHelpers.interopRequireDefault(_react);

var _reactRedux = require('react-redux');

var _RootContainer = require('./RootContainer');

var _RootContainer2 = babelHelpers.interopRequireDefault(_RootContainer);

var _Redux = require('../Redux');

var _Redux2 = babelHelpers.interopRequireDefault(_Redux);

var store = (0, _Redux2.default)();

var App = function (_Component) {
  babelHelpers.inherits(App, _Component);

  function App() {
    babelHelpers.classCallCheck(this, App);
    return babelHelpers.possibleConstructorReturn(this, (App.__proto__ || Object.getPrototypeOf(App)).apply(this, arguments));
  }

  babelHelpers.createClass(App, [{
    key: 'render',
    value: function render() {
      return _react2.default.createElement(
        _reactRedux.Provider,
        { store: store, __source: {
            fileName: _jsxFileName,
            lineNumber: 23
          }
        },
        _react2.default.createElement(_RootContainer2.default, {
          __source: {
            fileName: _jsxFileName,
            lineNumber: 24
          }
        })
      );
    }
  }]);
  return App;
}(_react.Component);

exports.default = _DebugConfig2.default.useReactotron ? console.tron.overlay(App) : App;